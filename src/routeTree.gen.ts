/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SenryuImport } from './routes/senryu'
import { Route as LanguagesImport } from './routes/languages'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const SenryuIdLazyImport = createFileRoute('/senryu/$id')()
const ItRepositoriesLazyImport = createFileRoute('/it/repositories')()
const ItArticlesLazyImport = createFileRoute('/it/articles')()
const ItTactTon1LazyImport = createFileRoute('/it/tact/ton1')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const SenryuRoute = SenryuImport.update({
  path: '/senryu',
  getParentRoute: () => rootRoute,
} as any)

const LanguagesRoute = LanguagesImport.update({
  path: '/languages',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const SenryuIdLazyRoute = SenryuIdLazyImport.update({
  path: '/$id',
  getParentRoute: () => SenryuRoute,
} as any).lazy(() => import('./routes/senryu.$id.lazy').then((d) => d.Route))

const ItRepositoriesLazyRoute = ItRepositoriesLazyImport.update({
  path: '/it/repositories',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/it/repositories.lazy').then((d) => d.Route),
)

const ItArticlesLazyRoute = ItArticlesLazyImport.update({
  path: '/it/articles',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/it/articles.lazy').then((d) => d.Route))

const ItTactTon1LazyRoute = ItTactTon1LazyImport.update({
  path: '/it/tact/ton1',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/it/tact/ton1.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/languages': {
      id: '/languages'
      path: '/languages'
      fullPath: '/languages'
      preLoaderRoute: typeof LanguagesImport
      parentRoute: typeof rootRoute
    }
    '/senryu': {
      id: '/senryu'
      path: '/senryu'
      fullPath: '/senryu'
      preLoaderRoute: typeof SenryuImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/it/articles': {
      id: '/it/articles'
      path: '/it/articles'
      fullPath: '/it/articles'
      preLoaderRoute: typeof ItArticlesLazyImport
      parentRoute: typeof rootRoute
    }
    '/it/repositories': {
      id: '/it/repositories'
      path: '/it/repositories'
      fullPath: '/it/repositories'
      preLoaderRoute: typeof ItRepositoriesLazyImport
      parentRoute: typeof rootRoute
    }
    '/senryu/$id': {
      id: '/senryu/$id'
      path: '/$id'
      fullPath: '/senryu/$id'
      preLoaderRoute: typeof SenryuIdLazyImport
      parentRoute: typeof SenryuImport
    }
    '/it/tact/ton1': {
      id: '/it/tact/ton1'
      path: '/it/tact/ton1'
      fullPath: '/it/tact/ton1'
      preLoaderRoute: typeof ItTactTon1LazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  LanguagesRoute,
  SenryuRoute: SenryuRoute.addChildren({ SenryuIdLazyRoute }),
  AboutLazyRoute,
  ItArticlesLazyRoute,
  ItRepositoriesLazyRoute,
  ItTactTon1LazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/languages",
        "/senryu",
        "/about",
        "/it/articles",
        "/it/repositories",
        "/it/tact/ton1"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/languages": {
      "filePath": "languages.tsx"
    },
    "/senryu": {
      "filePath": "senryu.tsx",
      "children": [
        "/senryu/$id"
      ]
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/it/articles": {
      "filePath": "it/articles.lazy.tsx"
    },
    "/it/repositories": {
      "filePath": "it/repositories.lazy.tsx"
    },
    "/senryu/$id": {
      "filePath": "senryu.$id.lazy.tsx",
      "parent": "/senryu"
    },
    "/it/tact/ton1": {
      "filePath": "it/tact/ton1.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
